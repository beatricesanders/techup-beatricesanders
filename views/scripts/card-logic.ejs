<!-- Load DB logic -->
<%- include('../scripts/db-logic'); %>


<script>

// Flip card animation 
function flipCard(card_no) {
    document.getElementById(card_no).classList.toggle("flipped");
    document.getElementById(card_no + '-q').classList.toggle("flipped");
    document.getElementById(card_no + '-footer').classList.toggle("flipped");

    setTimeout(function(){changeCard(card_no)},300);
}

// Apply filters 
function applyFilters() {

    active_heat_cards = document.getElementById("heat-cards").getElementsByClassName("active").length
    active_theme_cards = document.getElementById("theme-cards").getElementsByClassName("active").length

    if(active_heat_cards == 0) {
        alert("No heat cards selected! Please select at least one theme and one heat card before filtering.");
    } if(active_theme_cards == 0){
        alert("No theme cards selected! Please select at least one theme and one heat card before filtering.");
    } else {
        flipAllCards();
    }
}

// Flip all cards 
function flipAllCards() {
    flipCard('card1')
    flipCard('card2')
}

// Get and print random card from database 
function changeCard(card_no) {

    // Filter database
    var active_db = filterDB(db,"theme") //filter by theme
    var active_db = filterDB(active_db,"heat") //filter by heat

    console.log(active_db)
    // first get current card ids 
    var current_cards = document.querySelectorAll(".q-card .q-content");
    var current_qs = [];

    for(var i = 0; i < current_cards.length; i++) {
        current_qs[i] = current_cards[i].innerHTML ;
    };

    if (current_qs[0] == ' ') {// if first q is blank,  get a random card 
        console.log("force loading " + card_no);
        rand = Math.floor(Math.random()* active_db.length ) ;
    } else { // otherwise, make sure card is not already on the board 
        do {
            rand = Math.floor(Math.random()* active_db.length ) 
        } while (current_qs.includes(active_db[rand].question));
    }

    console.log(card_no + "->" + rand)

    // fetch theme icon 
    //theme_icon = getThemeIcon(active_db[rand].theme)
    theme_icon = "";
    
    // fetch heat icon and heat colors 
    heat_icon = "<img class = 'theme-icon' src = 'images/heat_icons/heat_"+active_db[rand].heat+".svg'>"
    heat_colors = getHeatColors(active_db[rand].heat)

    //update text
    document.getElementById(card_no + '-q').innerHTML = active_db[rand].question;
    document.getElementById(card_no + '-heat').innerHTML = heat_icon;
    document.getElementById(card_no + '-theme').innerHTML = active_db[rand].theme + " "+ theme_icon;

    //Change colors
    document.getElementById(card_no).style.backgroundColor = heat_colors[1];
    document.getElementById(card_no + '-footer').style.backgroundColor = heat_colors[2];

}

// Load all cards
function loadAllCards(card_no) {
    changeCard('card1');
    changeCard('card2')
}


// switch function for theme icons
function getThemeIcon(theme) {

    var theme_icon = ""

    switch(theme) {
        case "Food":
            theme_icon = "<img class = 'theme-icon' src = 'images/food.svg'>";
            break;
        case "Nostalgia":
        theme_icon = "<img class = 'theme-icon' src = 'images/nostalgia.svg'>";
            break;
        case "Life & Career":
        theme_icon = "<img class = 'theme-icon' src = 'images/career.svg'>";
            break;
        case "Hobbies & Habits":
        theme_icon = "<img class = 'theme-icon' src = 'images/career.svg'>";
            break;
        default:
        theme_icon = "";
        };

    return(theme_icon);

}

// switch function for card colors
function getHeatColors(theme) {

var heat_colors = []

switch(theme) {
    case 1:
        heat_colors[1] = "#72a276";
        heat_colors[2] = "#517B54";
        break;
    case 2:
        heat_colors[1] = "#448C90";
        heat_colors[2] = "#346D6F";
        break;
    case 3:
        heat_colors[1] = "#D79784";
        heat_colors[2] = "#AF7A6E";
        break;
    };

return(heat_colors);

}

</script>
  

